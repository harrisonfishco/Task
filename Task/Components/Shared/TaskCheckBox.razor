<div class="grid-center @GetLabelStyle()">
    @if(LabelPosition == Postion.Left || LabelPosition == Postion.Top)
    {
        <label for="@instance" class="checkbox-label">@Label</label>
    }
   
    <input id="@instance" class="checkbox-input" type="checkbox" @bind="Value" @bind:after="CheckboxChanged" disabled="@Disabled"/>

    @if (LabelPosition == Postion.Right || LabelPosition == Postion.Bottom)
    {
        <label for="@instance" class="checkbox-label">@Label</label>
    }
</div>


@code {
    [Parameter]
    public string Label { get; set; } = string.Empty;

    [Parameter]
    public bool Disabled { get; set; } = false;

    [Parameter]
    public EventCallback<ChangeEventArgs> OnChanged { get; set; }

    [Parameter]
    public Postion LabelPosition { get; set; } = Postion.Left;

    [Parameter]
    public bool Default { get; set; } = false;

    private bool Value { get; set; }
    private Guid instance = Guid.NewGuid();

    private void CheckboxChanged()
    {
        ChangeEventArgs e = new ChangeEventArgs();
        e.Value = Value;
        OnChanged.InvokeAsync(e);
    }

    private string GetLabelStyle()
    {
        switch (LabelPosition)
        {
            case Postion.Top:
            case Postion.Bottom:
                return "label-break";

            default:
                return "";
        }
    }

    public enum Postion
    {
        Top,
        Bottom,
        Left,
        Right
    }

}