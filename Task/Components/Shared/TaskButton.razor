
<button style="border-radius: 4px; 
        border-width: thick; 
        font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;" 
        class="@GetButtonType()" 
        @onclick="OnClick">
        @Text
</button>

@code {
    public enum ButtonType
    {
        Default,    //border main color, transparent(next button)
        Neutral,    //greyish color, filled(cancel button)
        Positive,   //main color, filled(confirm button) ??? or green
        Negative,   //red, filled(delete button)
        Info,       //light blue, filled
        Warning,    //orange, filled("I understand the risk" button)
        Link,       //blue text, transparent,
    }

    [Parameter]
    public string Text { get; set; } = "Button";

    [Parameter]
    public ButtonType Type { get; set; } = ButtonType.Default;

    [Parameter]
    public EventCallback<MouseEventArgs> OnClick { get; set; }



    private string GetButtonType()
    {
        switch(Type)
        {
            case ButtonType.Positive:
                return "btn-positive";
            case ButtonType.Neutral:
                return "btn-neutral";
            case ButtonType.Negative:
                return "btn-negative";
            case ButtonType.Info:
                return "btn-info";
            case ButtonType.Warning:
                return "btn-warning";
            case ButtonType.Link:
                return "btn-link";
            default:
                return "btn-default";
        }
    }
}
